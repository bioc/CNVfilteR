% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filterCNVs.R
\name{filterCNVs}
\alias{filterCNVs}
\title{filterCNVs}
\usage{
filterCNVs(cnvs.gr, vcfs, expected.ht.mean = 50,
  expected.dup.ht.mean1 = 33, expected.dup.ht.mean2 = 66,
  sigmoid.c1 = 2, sigmoid.c2.vector = c(28, 39, 44, 56, 60, 72),
  dup.threshold.score = 0.5, ht.deletions.threshold = 15,
  verbose = FALSE)
}
\arguments{
\item{cnvs.gr}{\code{GRanges} containing CNVs to be filtered. Use \code{loadCNVcalls} to load them.}

\item{vcfs}{List of \code{GRanges} containing all variants (SNV/indel) obtaining with the \code{loadVCFs} function.}

\item{expected.ht.mean}{Expected heterozygous SNV/indel depth. (defaults to 50)}

\item{expected.dup.ht.mean1}{Expected heterozygous SNV/indel depth when the variant IS NOT in the same allele than the CNV duplication call. (defaults to 33)}

\item{expected.dup.ht.mean2}{Expected heterozygous SNV/indel depth when the variant IS in the same allele than the CNV duplication call. (defaults to 66)}

\item{sigmoid.c1}{Sigmoid c1 parameter. (defaults to 2)}

\item{sigmoid.c2.vector}{Vector containing sigmoid c2 parameters for the six sigmoids functions. (defaults to c(28, 39, 44, 56, 60, 72))}

\item{dup.threshold.score}{Limit value to decide if a CNV duplication can be filtered or not. A CNV duplication can be filtered if the total score computed from heterozygous variants matching the CNV is equal or greater than \code{dup.threshold.score}.  (defaults to 0.5)}

\item{ht.deletions.threshold}{Minimum percentage of heterozygous variants matching a CNV deletion to filter that CNV. (defaults to 15)}

\item{verbose}{Whether to show information messages. (defaults to TRUE)}
}
\value{
A S3 object with 3 elements:
 - \code{cnvs}: \code{GRanges} with the input CNVs and the meta-columns added during the call:
   - \code{filter}: Set to TRUE if the CNV can be filtered
   - \code{nVariants}: Number of variants matching the CNV
   - \code{nInFavor}: For a CNV duplication, number of variants in favor of filtering (those with a positive score)
   - \code{nAgainst}: For a CNV duplication, number of variants against filtering (those with a negative score)
   - \code{score}: total score when computing all the variants scores
   - \code{id}: CNV id
 - \code{variantsForEachCNV}: named list where each name correspond to a CNV id and the value is a \code{data.frame} with all variants matching that CNV
 - \code{filterParameters}: input parameters used for filtering
}
\description{
Identifies those copy number calls that can be filtered
}
\details{
Checks all the variants (SNV and optionally INDELs) matching each CNV present in \code{cnvs.gr} to decide whether a CNV can be filtered or not.
It returs a S3 object with 3 elments: \code{cnvs}, \code{variantsForEachCNV} and \code{filterParameters}. See return section for further details.

A CNV deletion can be filtered if there is at least \code{ht.deletions.threshold}% of heterozygous variants matching the CNV.
A CNV duplication can be filtered if the \code{score} is >= \code{dup.threshold.score} after computing all heterozygous variants matching the CNV.

If a CNV can be filtered, then the value TRUE is set in the \code{filter} column of the \code{cnvs} element.
}
\examples{
# Load CNVs data
cnvs.file <- system.file("extdata", "DECoN.CNVcalls.csv", package = "CNVfilteR", mustWork = TRUE)
cnvs.gr <- loadCNVcalls(cnvs.file = cnvs.file, chr.column = "Chromosome", start.column = "Start", end.column = "End", cnv.column = "CNV.type", sample.column = "Sample")

# Load VCFs data
vcf.files <- c(system.file("extdata", "variants.sample1.vcf.gz", package = "CNVfilteR", mustWork = TRUE),
               system.file("extdata", "variants.sample2.vcf.gz", package = "CNVfilteR", mustWork = TRUE))
vcfs <- loadVCFs(vcf.files, cnvs.gr = cnvs.gr)

# Filter CNVs
results <- filterCNVs(cnvs.gr, vcfs)

# Check CNVs that can be filtered
as.data.frame(results$cnvs[results$cnvs$filter == TRUE])


}
